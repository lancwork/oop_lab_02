/*
Бобрович А.И.
гр. 044691
Лабораторная работа №2

13. Создать класс, в котором реализовать функции для работы с двухмер-
ными массивами:
а) функция должна обнулить строку и столбец с минимальным элементом;
б) функция должна в каждой строке массива первый найденный нечетный
элемент поменять местами с первым элементом этой строки.
Память под массивы отводить динамически. Использовать конструктор с
параметрами. Деструктор должен освобождать память, выделенную под массивы.


Лабораторная работа №3
3. Создать класс, в котором перегрузить операторы:
а) «&» для перемножения двух матриц;
б) «+» для сложения двух матриц.
Память под матрицы отводить динамически. Предоставить конструктор
копирования. Определить friend-функции для операторов ввода/вывода в поток.
*/

#include <iomanip>
#include "Matrix.h"

using namespace std;

int getValue(string name)
{
	cout << name << ": ";
	int result;
	cin >> result; 	
	return result;
}

void main() {	
	setlocale(LC_ALL, "ru");
	try
	{
		Matrix::RandomOn();

		

		/*Лаб раб №2*/
		Matrix::ShowMessage("Лаб раб №2");
		cout << "Введите размеры массива" << endl;
		int h = getValue("кол-во строк   ");
		int w = getValue("кол-во столбцов");

		Matrix m(h, w);

		m.Random(-10,10);
		m.View();
		m.f1();
		Matrix::ShowMessage("функция должна обнулить строку и столбец с минимальным элементом");
		m.View();
		m.f2();
		Matrix::ShowMessage("функция должна в каждой строке массива первый нечётный эл. менять с первым элементом");
		m.View();
		//m.GetValue(20, 20);

		/*Лаб раб №3*/
		Matrix::ShowMessage("Лаб раб №3");

		Matrix m1(1, 10);
		Matrix m2(1, 10);
		m1.Random(0, 10);
		m2.Random(0, 10);

		Matrix m3(m1 + m2);
		Matrix m4(m1 & m2);

		m1.View();
		cout << " + " << endl;
		m2.View();
		cout << " = " << endl;
		m3.View();
		cout << endl << endl;

		m1.View();
		cout << " * " << endl;
		m2.View();
		cout << " = " << endl;
		m4.View();

	}
	catch (exception e)
	{
		cerr << e.what() << endl;
	}
	system("pause");
}

